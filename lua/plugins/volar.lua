-- local util = require("lspconfig.util")
--
-- local function get_typescript_server_path(root_dir)
--   local global_ts = "/Users/qin/.nvm/versions/node/v16.16.0/lib/node_modules/typescript/lib"
--   local found_ts = ""
--   local function check_dir(path)
--     found_ts = util.path.join(path, "node_modules", "typescript", "lib")
--     if util.path.exists(found_ts) then
--       return path
--     end
--   end
--   if util.search_ancestors(root_dir, check_dir) then
--     return found_ts
--   else
--     return global_ts
--   end
-- end
--
-- local lspconfig = require("lspconfig")
--
-- lspconfig.volar.setup({
--   filetypes = { "typescript", "javascript", "javascriptreact", "typescriptreact", "vue", "json" },
--   on_new_config = function(new_config, new_root_dir)
--     new_config.init_options.typescript.tsdk = get_typescript_server_path(new_root_dir)
--   end,
--   init_options = {
--     languageFeatures = {
--       references = true,
--       definition = true,
--       typeDefinition = true,
--       callHierarchy = true,
--       hover = false,
--       rename = true,
--       signatureHelp = true,
--       codeAction = true,
--       completion = {
--         defaultTagNameCase = "kebabCase",
--         defaultAttrNameCase = "kebabCase",
--       },
--       schemaRequestService = true,
--       documentHighlight = true,
--       codeLens = true,
--       semanticTokens = true,
--       diagnostics = true,
--     },
--     documentFeatures = {
--       selectionRange = true,
--       foldingRange = true,
--       linkedEditingRange = true,
--       documentSymbol = true,
--       documentColor = true,
--     },
--   },
--   settings = {
--     volar = {
--       codeLens = {
--         references = true,
--         pugTools = true,
--         scriptSetupTools = true,
--       },
--       codeAction = {},
--     },
--     vue = {
--       complete = {
--         casing = {
--           props = "kebab",
--           tags = "kebab",
--         },
--       },
--     },
--   },
-- })

return {}
